{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kevin/code/egghead-mongo-schema/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport React from \"react\";\nexport default (function () {\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var postData = function postData() {\n    var res, parsed;\n    return _regeneratorRuntime.async(function postData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"/api/user\", {\n              method: \"POST\",\n              headers: {\n                \"content-type\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            }));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            parsed = _context.sent;\n            setData(parsed);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    styles: {\n      textDecoration: \"underline\",\n      paddingBottom: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Enter a JSON user object (it must contain an email)\"), __jsx(\"textarea\", {\n    type: \"textarea\",\n    rows: \"10\",\n    cols: \"80\",\n    value: user,\n    onChange: function onChange(e) {\n      return setUser(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingTop: \"14px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return postData();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Post data\")), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Response:\"), __jsx(\"div\", {\n    style: {\n      backgroundColor: \"grey\",\n      borderRadius: \"4px\",\n      minWidth: \"200px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, JSON.stringify(data, null, 2)))));\n});","map":{"version":3,"sources":["/Users/kevin/code/egghead-mongo-schema/pages/index.js"],"names":["fetch","React","useState","data","setData","user","setUser","postData","method","headers","body","JSON","stringify","res","json","parsed","display","flexDirection","justifyContent","alignItems","textDecoration","paddingBottom","e","target","value","paddingTop","backgroundColor","borderRadius","minWidth","padding"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAe,YAAM;AAAA,wBACKA,KAAK,CAACC,QAAN,CAAe,EAAf,CADL;AAAA;AAAA,MACZC,IADY;AAAA,MACNC,OADM;;AAAA,yBAEKH,KAAK,CAACC,QAAN,CAAe,EAAf,CAFL;AAAA;AAAA,MAEZG,IAFY;AAAA,MAENC,OAFM;;AAInB,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGP,KAAK,CAAC,WAAD,EAAc;AACnCQ,cAAAA,MAAM,EAAE,MAD2B;AAEnCC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAF0B;AAGnCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAH6B,aAAd,CADR;;AAAA;AACTQ,YAAAA,GADS;AAAA;AAAA,6CAMMA,GAAG,CAACC,IAAJ,EANN;;AAAA;AAMTC,YAAAA,MANS;AAOfX,YAAAA,OAAO,CAACW,MAAD,CAAP;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AASA,SACE,4BACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,MAAM,EAAE;AAAEC,MAAAA,cAAc,EAAE,WAAlB;AAA+BC,MAAAA,aAAa,EAAE;AAA9C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DARF,EAWE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,KAAK,EAAEhB,IAJT;AAKE,IAAA,QAAQ,EAAE,kBAACiB,CAAD;AAAA,aAAOhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAkBE;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,OAAO,EAAE,MADJ;AAELE,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILM,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMlB,QAAQ,EAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CAlBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA5BF,EA6BE;AACE,IAAA,KAAK,EAAE;AACLmB,MAAAA,eAAe,EAAE,MADZ;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,QAAQ,EAAE,OAHL;AAILZ,MAAAA,OAAO,EAAE,MAJJ;AAKLE,MAAAA,cAAc,EAAE,QALX;AAMLC,MAAAA,UAAU,EAAE,QANP;AAOLU,MAAAA,OAAO,EAAE;AAPJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMlB,IAAI,CAACC,SAAL,CAAeT,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAXF,CA7BF,CADF,CADF;AA+CD,CA5DD","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport React from \"react\";\n\nexport default () => {\n  const [data, setData] = React.useState({});\n  const [user, setUser] = React.useState(\"\");\n\n  const postData = async () => {\n    const res = await fetch(\"/api/user\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify(user),\n    });\n    const parsed = await res.json();\n    setData(parsed);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div styles={{ textDecoration: \"underline\", paddingBottom: \"5px\" }}>\n          Enter a JSON user object (it must contain an email)\n        </div>\n        <textarea\n          type=\"textarea\"\n          rows=\"10\"\n          cols=\"80\"\n          value={user}\n          onChange={(e) => setUser(e.target.value)}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            paddingTop: \"14px\",\n          }}\n        >\n          <button onClick={() => postData()}>Post data</button>\n        </div>\n        <p>Response:</p>\n        <div\n          style={{\n            backgroundColor: \"grey\",\n            borderRadius: \"4px\",\n            minWidth: \"200px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: \"5px\",\n          }}\n        >\n          <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}